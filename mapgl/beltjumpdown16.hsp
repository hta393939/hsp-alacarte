#include "dotfw.as"
#define BGPIC_ID (0)
#define MYMAP_ID (1)

#define BGFRONT_ID (2)

#const KEY_DOWN 8

#const DEFAULT_ACCEL 60

	chdir "data"
// スクロール有りジャンプ有り 敵弾が壁で止まる
	;	マップを使ったサンプル4
// 左右のみ
	//df_config "ps2 Z150"
	df_config "X320 Y240 Z200 vpad"
	//df_config "X320 Y240 Z200 vpad"
	//df_config "X256 Y192 Z200"
	df_reset

	hspvpad_set 2, -1 // 上
	//hspvpad_set 3, -1 // 下
	hspvpad_set 4, -1 // v←
	//hspvpad_set 5, -1 // o→Z ジャンプ
	hspvpad_set 6, -1 // A↑ X
	//hspvpad_set 7, -1 // ロ↓C

	//df_setbgpicfile BGPIC_ID,"sozai5.jpg"	; 背景画像

	//df_loadbgmap MYMAP_ID, "test2.tmap"	; マップファイル読み込み
	df_loadbgmap MYMAP_ID, "belt16_16_1.tmap"	; マップファイル読み込み
	mapsx = _dotfw_curmapx			; マップサイズXを取得
	mapsy = _dotfw_curmapy			; マップサイズYを取得
	df_getbgmap map, MYMAP_ID		; マップ配列変数を取得

	//df_bgpoint 0, 10,10

	//df_mapaction MYMAP_ID, 0, 6 ; 重力無し
	df_mapaction MYMAP_ID, 60, 6 ; 重力とジャンプ(80, 8とか)

	df_bgview MYMAP_ID, 90,90, 10,10, 32,32	; スクロール設定
	df_paction *player_mapev,PACTION_MAPITEM	; マップイベント処理

	df_paction *onplayerkey, PACTION_KEY


	if 0 {
		df_celload bgcel,"tamadot.png"		; キャラクターの画像ファイル
		es_sizeex 64,64,,40,40,12,24		; キャラクターのサイズ指定
		es_patanim 0, 4, 256, 64, 0, bgcel	; キャラクターの登録(0)
		es_patanim 4, 4, 256, 192, 0, bgcel	; キャラクターの登録(4)
	} else {
		df_celload bgcel,"tamane16.png"		; キャラクターの画像ファイル
		es_sizeex 16,16, ,16,16, 0,0		; キャラクターのサイズ指定
		es_patanim 0, 4, 0,16, 0, bgcel	; キャラクターの登録(0)
		es_patanim 4, 4, 64,16, 0, bgcel	; キャラクターの登録(4)
	}


	df_mes "TAMANE DOT FRAMEWORK",1,1	; テキスト表示

	df_addplayer 300,100,0			; プレイヤーを追加
	//df_pmode 0, 2	; 移動スピード(16ドットにはX=2がいい感じ
	df_pmode 0, 2, 2

	if 1 {
		//df_emode 0, 1, 60, 60, 2, 0, 0
		//df_enemygen DIR_LEFT, 10, 60, 0
	}

	if 1 { // 画面外で消える
		repeat 1
			dir = DIR_DOWN
			dir = DIR_AIM
			df_addenemy cnt * 50 + 200, cnt * 50 + 120, dir, 8, 0
		loop
	}

	
*main
	// key は dotfw でセットされるのか
	if key&PLAYER_KEY_ESC : end		; [ESC]キーで終了

	df_getplayer
	i=0:if _dotfw_mydir=DIR_RIGHT : i=4
	j=(_dotfw_myani>>2)&3
	if _dotfw_myact!=1 : j=0
	spno = _dotfw_cursp
	es_chr spno, i+j

	if key & PLAYER_KEY_BUTTON3 {
		// 0下から反時計周り
		dir = DIR_LEFT
		dir = _dotfw_mydir // ジャンプ時のみらしい
		if dir == DIR_LEFT {
			mv = -1
		} else {
			mv = 1
		}
		df_addpmis _dotfw_myx + mv * 8, _dotfw_myy, dir, 100 * 2, 0, 0
	} // 2000h C

	es_get accy, spno, ESI_ACCELY
	df_mes strf("accy, %d", accy), 20,10,10

	df_update

	if _drop_count > 0 {
		_drop_count -= 1
		// 直後に戻すのは落ちる
		if _drop_count <= 0 {
			es_setp spno, ESI_ACCELY, DEFAULT_ACCEL, 0 // 値をセット
		}
	}
	goto *main

*onplayerkey

	df_mes strf("key, %d", key), 20,4, 10
	df_mes strf("result, %08X", sp_player_myres@HSP3MOD_DOTFW), 20,5, 15

	gosub *jumpact_key@HSP3MOD_DOTFW
/*
	if 1 {
		if key & KEY_DOWN {
			// 
			sp_player_mypy += 8
			es_setp sp_player@HSP3MOD_DOTFW,ESI_SPDY, sp_player_mypy
		}
	}
*/
	return


*player_mapev
	;	イベント処理
	op=_dotfw_curmapattr
	if op==0 {
		; アイテム取得
		map(mapsx*_dotfw_curmapy+_dotfw_curmapx)=0	; アイテムを消す
	}
	if op==1 {
		//goto *miss



		df_mes strf("mapattr, %d", op), 1,6
		// 落ちない判定できるか??
		if (key & KEY_DOWN) != 0 {
			return
		}
		sp_player_myact@HSP3MOD_DOTFW = 0
		_dotfw_myact = 0
		spno = _dotfw_cursp

		df_getaxis
		if (_dotdw_movey > 0) | 1 {
			_dotfw_movey = 0
		}
		df_putaxis

		es_get accy, spno, ESI_ACCELY
		//es_setp spno, ESI_POSY, _dotfw_cy - 10, 0 // 値をセット
		es_setp spno, ESI_ACCELY, 0, 0 // 値をセット

		_drop_count = 2
	}
	return

*mesrest
	df_mes strf("12ab%c%c%c%c", 0x81, 0x91, 0xa1, 0xb1), 1,4
	df_mes strf("24ab%c%c%c%c", 0x01, 0x11, 0x21, 0x31), 1,5
	return


*miss
	; トゲにあたるとミス
	df_mes "PLAYER MISS!",1,2		; テキスト表示
	//df_pwipe ; プレイヤーを消去
	gosub *mesrest
	wait 100 * 3
	// 
	return
