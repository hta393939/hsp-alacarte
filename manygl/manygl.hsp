#include "dotfw.as"
#define BGPIC_ID (0)
#define MYMAP_ID (1)

#define BGFRONT_ID (2)

#const FONT_WHITE 0
#const FONT_DBLUE 1
#const FONT_GREEN 2
#const FONT_LIME 3
#const FONT_RED 8
#const FONT_GRAY 14

#const SE_PUYO 0
#const SE_CLICK 1
#const SE_BREAK2 2
#const SE_SEL 3
#const SE_FOOT 4

#enum WID_KEI16 = 24
#enum WID_KEI8
#enum WID_MON32
#enum WID_MON16
#enum WID_MENUCHIP
#enum WID_SHOOT32

#const BG_MENU 15

#const CHR_KEI_D 160
#const CHR_KEI_U (CHR_KEI_D+4)
#const CHR_KEI_L (CHR_KEI_U+4)
#const CHR_KEI_R (CHR_KEI_L+4)
#const CHR_MON_0 256
#const CHR_SHOOT_0 512

#const KEY_LEFT 1
#const KEY_UP 2
#const KEY_RIGHT 4
#const KEY_DOWN 8

	runos = sysinfo(0)
	_isem = 0
	if instr(runos, 0, "Emscripten") == 0 {
		_isem = 1
	}
	if _isem == 0 {
		chdir "data"
	}

	//df_config "ps2 Z150"
	df_config "X320 Y240 Z200 vpad"
	//df_config "X320 Y240 Z200 vpad"
	//df_config "X256 Y192 Z200"
	df_reset

	_pxw = 320
	_pxh = 240

	gosub *appinit



	df_celload bgcel,"tamane16.png"		; キャラクターの画像ファイル
	es_sizeex 16,16, ,16,16, 0,0		; キャラクターのサイズ指定
	es_patanim 0, 4, 0,16, 0, bgcel	; キャラクターの登録(0)
	es_patanim 4, 4, 64,16, 0, bgcel	; キャラクターの登録(4)

	//df_addplayer 300,100,0			; プレイヤーを追加
	df_addplayer 300,100, CHR_KEI_D
	//df_pmode 0, 2	; 移動スピード(16ドットにはX=2がいい感じ
	df_pmode 0, 2, 2
	
	//df_paction *onmiss, PACTION_MISS
	df_paction *onitem, PACTION_ITEM
	//df_paction *onmapitem, PACTION_MAPITEM

	getreq ts, SYSREQ_TIMER
	presec = ts / 1000
	fpscount = 0
	
*main
	// key は dotfw でセットされるのか
	if key&PLAYER_KEY_ESC : end		; [ESC]キーで終了

	df_getplayer
	// 左右振り
	dim chnos, 4
	chnos(0) = CHR_KEI_D, CHR_KEI_U, CHR_KEI_L, CHR_KEI_R
	d = _dotfw_mydir
	dir256 = d
	dir4 = 0 // 下
	if 32 <= d & d <= 96 {
		dir4 = 3 // 右
	} else {
		if 96 < d & d < 160 {
			dir4 = 1 // 上
		} else {
			if 160 <= d & d <= 224 {
				// 左
				dir4 = 2
			}
		}
	}

	j=(_dotfw_myani>>2)&3
	// myact 消されてるんだがなぜだ...
	if _dotfw_myact!=1 : j=0 // キー押しじゃない場合
	es_chr _dotfw_cursp, chnos(dir4) + j

// ゲーム中表示
		lx = 2
	// fps カウント
		getreq ts, SYSREQ_TIMER
		df_mes strf("%d", ts), lx,3
		cursec = ts / 1000
		if cursec > presec {
			df_mes strf("%d [fps]", fpscount), lx,2
			presec = cursec
			fpscount = 0
		} else {
			fpscount += 1
		}
		df_mes strf("ENE %d", _dotfw_enemy), lx,4, 11
		df_mes strf("%d, %d", j, _dotfw_myani), lx,5,FONT_LIME
		df_mes strf("%d", 123), lx,6,FONT_WHITE
	
	df_update

	goto _mainlb



*fire1
	// デフォルト通常弾
	chno = CHR_SHOOT_0 + 4
	opt = 1
	dir = DIR_LEFT
	df_addpmis x + mv * 0, y, dir, 100 * 2, chno, opt
	dir = DIR_RIGHT
	df_addpmis x + mv * 0, y, dir, 100 * 2, chno, opt
	return

*fire2
	// あんまり面白くない
	chno = CHR_SHOOT_0 + 8
	opt = 2
	dir = dir256
	df_addpmis x, y, dir - 16, 100 * 2, chno, opt
	df_addpmis x, y, dir, 100 * 2, chno, opt
	df_addpmis x, y, dir + 16, 100 * 2, chno, opt
	return

*fire3
	chno = CHR_SHOOT_0 + 12
	opt = 3
	df_addpmis x + mv * 8, y, dir, 100 * 2, chno, opt
	return

*fire4
	chno = CHR_SHOOT_0 + 16
	opt = 4
	df_addpmis x + mv * 8, y, dir, 100 * 2, chno, opt
	return

*fire5
	chno = CHR_SHOOT_0 + 20
	opt = 5
	df_addpmis x + mv * 8, y, dir, 100 * 2, chno, opt
	return

*fire6
	chno = CHR_SHOOT_0 + 24
	opt = 6
	df_addpmis x + mv * 8, y, dir, 100 * 2, chno, opt
	return

*fire7
	dir = DIR_LEFT
	chno = CHR_SHOOT_0 + 28
	opt = 7
	df_addpmis x + mv * 8, y, dir, 100 * 2, chno, opt
	return

*fire8
	dir = DIR_RIGHT
	chno = CHR_SHOOT_0
	opt = 8
	df_addpmis x + 8, y, dir, 100 * 2, chno, opt
	return

*onaim
	spno = _dotfw_cursp
	x = _dotfw_myx
	y = _dotfw_myy
	es_aim spno, x,y, 5
	return


// △ X
// 〇 Z
// × C
*onbut1
	// X △
	//mmplay SE_PUYO
	mmplay SE_FOOT

	
	// 0下から反時計周り
	x = _dotfw_myx
	y = _dotfw_myy
	dir = DIR_LEFT
	dir = _dotfw_mydir // ジャンプ時のみらしい
	if dir == DIR_LEFT {
		mv = -1
	} else {
		mv = 1
	}
	// 自分にあたるんだが;;
	//mv = 0
	//df_addpmis x + mv * 8, y, dir, 100 * 2, 0, 0
	repeat length(firelbs)
		gosub firelbs(cnt)
	loop
	return

*onbut2
	// Z 〇

	df_emodesub *onaim, 14
	dir = DIR_DOWN
	en = _dotfw_enemy
	if en > 800 {
		return
	}
	repeat 801 - en
		x = 180 - 40 + (cnt \ 10) * 10
		y = 200 + (cnt / 10) * 4
		shootrate = 10 * 0
		df_emode 14, CHR_MON_0 + rnd(16) * 4 * 0 + 16 * 4, shootrate, 10, 100
		df_addenemy x,y, dir, 8, 0
		spno = _dotfw_cursp
		es_flag spno, ESSPFLAG_NOWIPE, 1 // 1: 追加
	loop
	return

*onbut3
	// C ×
	gosub *maintomenu
	return



*onitem
	spno = _dotfw_cursp
	es_kill spno
	return


*player_mapev
	// 多分使わない
	;	イベント処理
	op=_dotfw_curmapattr
	if op==0 {
		; アイテム取得
		map(mapsx*_dotfw_curmapy+_dotfw_curmapx)=0	; アイテムを消す
	}
	return

*mesrest
	return


*miss
	; トゲにあたるとミス
	df_mes "PLAYER MISS!",1,2		; テキスト表示
	//df_pwipe ; プレイヤーを消去
	gosub *mesrest
	wait 100 * 3
	// 
	return

*setvol
	vol = _volfactor * _volfactor - 1000
	repeat 5
		mmvol cnt, vol
	loop
	return


*maintomenu
	_menu = 100
	df_paction *onbut1menu, PACTION_BUTTON
	df_paction *onbut2menu, PACTION_BUTTON2
	df_paction *onbut3menu, PACTION_BUTTON3
	df_paction *onkeymenu, PACTION_KEY
	_prekey = 0
	_menuy = 0
	gosub *clearmes

	lx = 10
	df_mes "OPTION", lx + 7, 3, FONT_RED
	df_mes "SE", lx, 6, FONT_GREEN
	df_mes "SE VOLUME", lx,8, FONT_GREEN
	df_mes "RESET GAME", lx,12, FONT_GREEN

	_mainlb = *menuframe
	return

*onbut1menu
	// 何もしない
	return

*onbut2menu
	// 何もしない
	return

*onbut3menu
	gosub *menutomain
	return

*menutomain
	_menu = 0
	df_paction *onbut1, PACTION_BUTTON
	df_paction *onbut2, PACTION_BUTTON2
	df_paction *onbut3, PACTION_BUTTON3
	df_paction *map2d_key@HSP3MOD_DOTFW, PACTION_KEY

	gosub *clearmes
	_mainlb = *main
	return

*onkeymenu
	x = 0
	y = 0
	if ((_prekey & KEY_UP) == 0) & ((key & KEY_UP) != 0) {
		y += -1
	}
	if ((_prekey & KEY_DOWN) == 0) & ((key & KEY_DOWN) != 0) {
		y += 1
	}
	if ((_prekey & KEY_LEFT) == 0) & ((key & KEY_LEFT) != 0) {
		x += -1
	}
	if ((_prekey & KEY_RIGHT) == 0) & ((key & KEY_RIGHT) != 0) {
		x += 1
	}

	df_mes " ", 20, _menuy

	if y != 0 {
		_menuy += y
		if _menuy < 0 {
			_menuy = 0
		} else {
			if _menuy > 9 {
				_menuy = 9
			}
		}
	} else {
		if x != 0 {
			if _menuy == 1 {
			}
			if _menuy == 2 {
			}
		}
	}
	df_mes ">", 20, _menuy

	_prekey = key
	return

*menuframe
	if key&PLAYER_KEY_ESC : end
	
	_menu -= 1
	if _menu == 0 {
		_menu = 1
	}

	es_putbg BG_MENU, 0,0, 0,0

	//df_update UPDATE_PAUSE | UPDATE_NOCONTROL
	df_update UPDATE_PAUSE

	//stick key
	df_mes strf("key, %d, flob, %d, %d", key, x, y), 1,1
	
	goto _mainlb


*appinit
	// 効果音
	mmload "se_puyo.wav", SE_PUYO, 0
	mmload "se_click.wav", SE_CLICK, 1
	mmload "se_break2.wav", SE_BREAK2, 2
	mmload "sel.wav", SE_SEL, 3
	mmload "se_foot.wav", SE_FOOT, 4
	_volfactor = 5
	gosub *setvol

	ldim firelbs, 9
	firelbs(0) = *nop, *fire1, *fire2, *fire3, *fire4, *fire5, *fire6, *fire7, *fire8

	celload "kei16.png", WID_KEI16
	es_size 16, 16, 100

	frnum = 6

	ch = CHR_KEI_D
	es_patanim ch, 4, 0,0, frnum, WID_KEI16

	ch = CHR_KEI_U
	es_patanim ch, 4, 16*4,0, frnum, WID_KEI16

	ch = CHR_KEI_L
	es_patanim ch, 4, 0,16, frnum, WID_KEI16

	ch = CHR_KEI_R
	es_patanim ch, 4, 16*4,16, frnum, WID_KEI16

// モンスター
	celload "mondot.png", WID_MON32
	es_size 32, 32, 50

	ch = CHR_MON_0
	repeat 16
		x = (cnt \ 2) * 32 * 4
		y = (cnt / 2) * 32
		es_patanim ch, 4, x,y, frnum, WID_MON32
		ch += 4
	loop

	celload "chip16white.png", WID_MON16
	es_size 16, 16, 50
	repeat 1
		px = 8 * 16
		py = 13 * 16
		es_patanim ch, 4, px,py, frnum, WID_MON16
		ch += 4
	loop

// ショット
	celload "shootdot.png", WID_SHOOT32
	es_size 32, 32, 50
	//es_sizeex 32,32, , 16,16, 8,8, -16,-16
	ch = CHR_SHOOT_0
	repeat 8
		px = cnt * 32
		py = 5 * 32
		es_pat ch, px, py, 0, WID_SHOOT32 
		ch += 4
	loop
	

// ボタン
	hspvpad_set 4, -1 // チェック無効

// マップ
	df_loadbgmap MYMAP_ID, "survive16.tmap"	; マップファイル読み込み
	mapsx = _dotfw_curmapx			; マップサイズXを取得
	mapsy = _dotfw_curmapy			; マップサイズYを取得
	df_getbgmap map, MYMAP_ID		; マップ配列変数を取得

	//df_bgpoint 0, 10,10

	// mapaction セットしなかったらショットも撃てる
	// セットしないとフルスクロールしない
	df_mapaction MYMAP_ID, 0, 6 ; 重力無し

	df_bgview MYMAP_ID, 90,90, 10,10, 32,32	; スクロール設定
	//df_paction *player_mapev,PACTION_MAPITEM	; マップイベント処理


	gosub *menutomain

	gosub *readymenubg

	gosub *jsini

	_mainlb = *main
	
	gsel 0

	return

*readygame
	_exp = 0
	_nextexp = 100
	_level = 1
	return

*readymenubg
	// 枠あり背景
	_mew = _pxw / 16
	_meh = _pxh / 16
	dim menubgbuf, _mew * _meh
	repeat _meh
		y = cnt
		repeat _mew
			x = cnt
			i = x + _mew * y
			mx = 0
			my = 0
			if x == 0 {
				mx = -1
			} else {
				if x == _mew - 1 {
					mx = 1
				}
			}
			if y == 0 {
				my = -1
			} else {
				if y == _meh / 2 + 1 {
					my = 1
				}
			}
			if y > _meh / 2 + 1 {
				mx = 0
			}
			val = (mx + 14) + (my + 14) * 16
			menubgbuf(i) = val
		loop
	loop
	celload "chip16white.png", WID_MENUCHIP
	celdiv WID_MENUCHIP, 16,16, 0,0
	// 黒透明は黒になる
	es_bgmap BG_MENU, menubgbuf, _mew,_meh, _mew,_meh, WID_MENUCHIP, ESBGOPT_NOTRANS
	return

*clearmes
	// テキスト面全消し
	spc = ""
	repeat _pxw / 8
		spc += " "
	loop
	repeat _pxh / 8
		df_mes spc, 0,cnt
	loop
	return

*nop
	// 何もしないサブルーチン
	return

*jsini
	if _isem == 0 {
		return
	}
	code = ""
	code += {"
window.addEventListener('dblclick', ev => {
	console.log('dblclick');
	ev.stopPropagation();
	ev.preventDefault();
});
"}
	exec code
	return
