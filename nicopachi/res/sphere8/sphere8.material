
material colored {
  u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
  u_ambientColor = 0.1, 0.1, 0.1
  u_cameraPosition = CAMERA_WORLD_POSITION
  u_diffuseColor = 1, 1, 1, 1
  u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
  u_specularExponent = 6.0

  sampler u_matcap {
    path = sphere8.png
    wrapS = CLAMP
    wrapT = CLAMP
  }

  renderState {
    cullFace = false
    depthTest = true
  }
  technique {
    pass {
      vertexShader = res/shaders/pachi.vert
      fragmentShader = res/shaders/pachi.frag
      defines = SPECULAR;DIRECTIONAL_LIGHT_COUNT 1
    }
  }
}
material textured {
  u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
  sampler u_diffuseTexture {
    mipmap = true
    wrapS = CLAMP
    wrapT = CLAMP
    minFilter = LINEAR_MIPMAP_LINEAR
    magFilter = LINEAR
  }
  renderState {
    cullFace = false
    depthTest = true
  }
  technique {
    pass {
      vertexShader = res/shaders/textured.vert
      fragmentShader = res/shaders/textured.frag
    }
  }
}

material mtl00000 : colored {

}

material mtl00001 : colored {

}

material mtl00002 : colored {

}
